#!/bin/sh

##
#
# Simple upload of a local file to a S3 bucket.
#
# Syntax:
#
#     aws-s3-upload-tester <bucket> <file> <content-type>
#
# Example:
#
#     aws-s3-upload-tester mybucket example.png image/png
#
# The purpose is to do simple testing to verify that
# the script is able to find your AWS credentials,
# and use them to upload a local file to an S3 bucket.
#
# Version 1.3.1
#
##
set -euf

# Helpers
out() { printf %s\\n "$*" ; }
err() { >&2 printf %s\\n "$*" ; }
die() { >&2 printf %s\\n "$*" ; exit 1 ; }
die_cmd() { die "Command needed: $1" ; }
die_var() { die "Variable needed: $1" ; }
cmd() { command -v "$1" >/dev/null 2>&1 ; }

out "aws-s3-upload-tester..."

if [ "$#" -ne 3 ]; then
    die "Syntax: aws-s3-upload-tester <bucket> <file> <content-type>"
fi

bucket="$1"
file="$2"
content_type="$3"

out "Bucket: $bucket"
out "File: $file"
out "Content type: $content_type"

set +u
[ -z "${AWS_ACCESS_KEY_ID}" ] && die_var AWS_ACCESS_KEY_ID
[ -z "${AWS_SECRET_ACCESS_KEY}" ] && die_var AWS_SECRET_ACCESS_KEY
set -u

[ -f "$file" ] || die "File missing: $file"

cmd curl || die_cmd curl
cmd date || die_cmd date
cmd openssl || die_cmd openssl

resource="/${bucket}/${file}"
date_value=`date -R`

put_string=$(printf "PUT\n\n${content_type}\n${date_value}\n${resource}")
out "put_string:$put_string"

signature=$(printf "%s" "${put_string}" | openssl sha1 -hmac ${AWS_SECRET_ACCESS_KEY} -binary | base64)
out "signature:$signature"

host_value="${bucket}.s3.amazonaws.com"
uri="https://${bucket}.s3.amazonaws.com/${file}"
out "uri:$uri"

out 
out
curl -v -X PUT -T "${file}" \
  -H "Host: ${host_value}" \
  -H "Date: ${date_value}" \
  -H "Content-Type: ${content_type}" \
  -H "Authorization: AWS ${AWS_ACCESS_KEY_ID}:${signature}" \
  "$uri"
out
